/* instructions-card.js
    
    Recipe instructions card.
*/

// Dependencies.
const Card = require("app/front/output/components/card.js"),
    { sanitize: purify } = require("dompurify"),
    ALLOWED_HTML = require("app/all/allowed-html.js");

/* Recipe instructions card component.
*/
class InstructionsCard extends Card {
    //
    // STATIC PROPERTIES
    //
    
    //
    // PROPERTIES
    //
    
    //
    // STATIC METHODS
    //
    
    //
    // METHODS
    //
    
    /* Gets DOM elements for the instructions list.
        
        instructions - Instruction string or array of strings. Falsy and
            non-string values will be skipped.
        
        Returns DOM structure for the instructions list.
    */
    sanitizeInstructions(instructions) {
        instructions = typeof instructions === "string" ? instructions : "";
        instructions = instructions.trim();
        
        instructions = purify(instructions, {
            ALLOWED_TAGS: Object.keys(ALLOWED_HTML)
        });
        
        return instructions;
    }
    
    /* Renders the component.
    */
    render() {
        let instructions = this.sanitizeInstructions(this.props.instructions);
        
        return (
            <article
                className="recipe-card instructions grid"
                ref={(r) => { this._elem = r; }}
            >
                
                <header className="row">
                    
                    <h2 className="col-12">Instructions</h2>
                    
                </header>
                
                <section
                    className="columns col-12"
                    dangerouslySetInnerHTML={{ __html: instructions }}
                    ref={(r) => { this._resizeElem = r; }}
                ></section>
                
            </article>
        );
    }
}

module.exports = InstructionsCard;

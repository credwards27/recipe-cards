/* ingredients-card.js
    
    Recipe ingredients card.
*/

// Dependencies.
const { PureComponent } = require("react");

/* Recipe ingredients card component.
*/
class IngredientsCard extends PureComponent {
    //
    // STATIC PROPERTIES
    //
    
    //
    // PROPERTIES
    //
    
    // Reference to the card's top-level element.
    _elem = null;
    
    /* Constructor for IngredientsCard.
        
        props - Component properties.
    */
    constructor(props) {
        super(props);
    }
    
    /* Unmount handler.
    */
    componentWillUnmount() {
        this._elem = null;
    }
    
    //
    // STATIC METHODS
    //
    
    //
    // METHODS
    //
    
    /* Getter for _elem.
        
        Returns the top-level element for the component.
    */
    get elem() {
        return this._elem;
    }
    
    /* Gets DOM elements for the ingredients list.
        
        ingredients - Ingredient string or array of strings. Falsy and
            non-string values will be skipped.
        
        Returns DOM structure for the ingredients list.
    */
    getIngredientsDom(ingredients) {
        ingredients = ingredients instanceof Array ?
            ingredients : [ ingredients ];
        
        ingredients = ingredients.filter((v) => {
            return (v && typeof v === "string");
        });
        
        let left = [],
            right = [],
            cutoff = ingredients.length > 5 ?
                Math.ceil(ingredients.length / 2) : ingredients.length,
            timestamp = Date.now();
        
        for (let i=0, l=ingredients.length; i<l; ++i) {
            let elem = <li key={`timestamp-${i}`}>{ingredients[i]}</li>;
            
            if (i < cutoff) {
                left.push(elem);
            }
            else {
                right.push(elem);
            }
        }
        
        return (
            <section className="columns row">
                
                <div className="column col-6">
                    <ul>
                        {left}
                    </ul>
                </div>
                
                <div className="column col-6">
                    <ul>
                        {right}
                    </ul>
                </div>
                
            </section>
        );
    }
    
    /* Renders the component.
    */
    render() {
        let ingredients = this.getIngredientsDom(this.props.ingredients);
        
        return (
            <article
                className="recipe-card ingredients grid"
                ref={(r) => { this._elem = r; }}
            >
                
                <header className="row">
                    <h1 className="col-6">{this.props.name}</h1>
                    <h2 className="col-6">Ingredients</h2>
                </header>
                
                {ingredients}
                
            </article>
        );
    }
}

module.exports = IngredientsCard;

/* recipe-node.js
    
    Association object combining a recipe with a LinkedList node.
*/

// Dependencies.
const Recipe = require("app/front/recipe.js"),
    LinkedList = require("app/all/linked-list.js");

/* Recipe node object.
*/
class RecipeNode extends Recipe {
    //
    // STATIC PROPERTIES
    //
    
    //
    // PROPERTIES
    //
    
    // LinkedList node associated with the recipe.
    _node = null;
    
    /* Constructor for RecipeNode.
    */
    constructor(data) {
        super(data);
        data.hasOwnProperty("node") && (this.node = data.node);
    }
    
    /* Destructor for RecipeNode. The associated node is not destroyed.
    */
    destroy() {
        this._node = null;
        super.destroy();
    }
    
    //
    // STATIC METHODS
    //
    
    //
    // METHODS
    //
    
    /* Getter for _node.
        
        Returns the associated node.
    */
    get node() {
        return this._node;
    }
    
    /* Setter for _node.
        
        node - New node associated with the recipe data, or a falsy value to
            unset the node.
    */
    set node(node) {
        node = node || null;
        
        if (node && !LinkedList.isNode(node)) {
            throw new Error("Associated recipe node must be a LinkedList " +
                "Node object.");
            
            return;
        }
        
        this._node = node;
    }
}

module.exports = RecipeNode;
